#f=open("MUSHROOMS/sup")
#s=f.readline()
s="TATCAGGTCATCCTTCTCTGACATAGCAAATCATTGGCAGGGATGCTCGGACGCCCCTACACGTTGTTGATCGGCCGTGACACTATAGCGATTCCACACGCCTCTCTAACGGAGCTTTTACTTAGACGGCCAGCGCTCAGGGTTTTCGAGTCGGTAGAATTACAACGAGCACGTTTGGTGATCGGATAAAGTCCGCTTAATCGTTTGCTGCTGACTAAGCAAACAAAAAGGTACTACGTGTCTAACGGAAACCACGTTCGTAATTTGGCTCCGAGTAGCGCTTCGGTCGAGCAGGAGGAAATGGACACTGGAATCAATAACCGATCTTGCTTTTGTTTGAATTGAGGTCCGTGTGAATATGGCATATTGCGCAAGGCCGAGGGCCTCCCAGCGCGAATTTATCAACGCACAGTCCACATCTAGATTTTGAGGCGCATCCTCGTCATAAACTACATGCGTCTTCAACAAATCATGTAATGGTCAGCTTTTTGCAAGCGATTAGTGCGATATTCTCTCGCTAAAAATCGGAATGGGCTACGACGCTACTTACCTCCCACGGGTTAGCGCGGACCCCTTTACACAATGTTTTCGCTGTTTGTCCGAGCTGATATCGGGCTCCCGGAAACTTACAGCGAGCGACGCTATACCGCCTCCTATGAATTTCGTGCTAGAGGGACTACCCCTCCAAGTGACGAGTTCGACCGGCCGTACACTCCGCCAACCATGAAAAGTTATACGATAACTATTGGCATAAATGTCTAACTATCCGCCAATACCTGCACCCTGTACCCCAGGTGGAGCATCGTGTATAAAGCGCACTGTTAAATACTGTGGCATATGCGTGAGCATTACGCTCTAAAGCTCATTCAGAAGGCACTGCCAGGAGGGCAATGTGAGAATCCTTCAAATATTGTTCAGAGTACGCTGTTGTCTGTGTTGACGGGTGTACCGGACGATACCAAAATGGAGAAGGGGCAATTAAGAGCCCTCTTTAGTTGTGCTAAAAGTTTGAAGACGAGCTTCCAGAGAAGCTACGGGATTGGCAAGATTTATTCAATAGTTGGCGATTAGGTGCCACTAGTCCTCGTTGCCCAAAAGGGTGTACATCGGACACTACCGTACCAAGAAAAAACTTTAAACCGCCAACCGTGAATGCACGTCACTGCACACTACATTCCGACCGTGGTTTCCCCGCACGCGTTTTTCGGACAAGCTGGAGAGCGAACAGACAGTGAGACGGAAGGGTTGGAACCCTACCAGGAACCTACGAGTGCCAGATAGCTGCTTCTTATGCCCGTCGCGTTCTGATTTCTCGTGGCGGGGATGAGTCTACGTACAGTGGTGATGTAAAATCATTCGGTTCTACTAAAGAGCAGTGTGCGTAACGTACTAATCTCTCAACCCACTAATGTATCCGTGAGCTACAAACAACTTGACCCCATCAACTACGACGCCTGTACGGCCTACATACTTTACAGTGATGCATGGCGTAGAAGATCGGCTCGTCCTATGTAGCCTGCTCCTCTTAGACATATAACCCCTAGTCTGTAGGTCGCGGTATCTTATCTTAGAGGATGTCGTGCTATATTCAAATGTCATCCGAACAAAACTTTGTGTGGTACGCTTCTCACCTAAGGTCGTTGATAGCTAAGGTATCATCTGCCAGAGAGGCAGAACCAAGCACGTACGATAGTCGCCTCATCAAGAAGCGTTGATAAATGTCACTGGCTCTTACCGGCGGGCAAGGATAGTAAACTGTTGGTGGGTCCTTTGCGCCGTTTCGATCCCGTAGCGCCTGGGAGATTCTTCCTCTGTAAAATGGTACTAATTGTTAACCGTGCGTGCGGCCTTCACCAAGCCCCAGTGGAGCGTTAGCTAACTACGAAGGATTGAAATACGCCCGGTTACGCGCCTTCGGATTTCGTCTCTCTGGGGAGGCCAGGAATCCAACCACGATAATCGGTCTAGCGACCGATAGGCCTGAAGCATACGAAGAAATCCTTATTCAAGAAGGTCTGGGGACAAGGAATTCGCGATAGCCACACTACGGTGTCCGAGCGAGTACACGGGAAGATACAGCTATGCCGACGTTACTGAGTTACAGGGGGGTCACTAACCCTCCTTAGTTGGATATTATTAGCTTCCGACATGACATCAGTCTCGCCGCATATTTGGCTCTCATGCACTTCGACCTGATCTCCTGCCGCACCAGGGAACAGGACACGCACAGAGAGCTATTTATTTGGACCGTATGTTGCGAGGCACGTTATGAGCACTCCTGCCTGGGTTTTCAAGTGTCTCCCCATCTAGGCCCTAGCTGCAGTAGTTCTCTGTCCTCCTCGAATATGAAGCCTCAACATATGTTTTGTTGCCCGCGTCTGAGGACCCAGGTAGGTCCCCGGATTCTACCGTGTCTTATGTAGTGGCTAGTACGAATTGTCCAACGTATCTGCCTCATGGAGCAGTGTACAAGGGACAAGCGCCGTACTAAGTAGAAAACGTTCAATCCTCTAGCAGTATTCGGTCCAATTACGTGCGGTACTTTAGCTGGTCAAAGCTCAAATTTGGGGCGCCCCGTAGCCCTAGTACTTCCGGCGGTATGAGCACTAACCGACCTGTTCTACGTGGGTTTGTGGAAAGCGATGGTCGTGAGGTGGGTTGGATTGCACGGTTGTACTTTTTAAGATCCCGAAAAGTTAACCTTAGTGGCCCAGATCCTGGGGAAAGTAGCCATTTGGCCTGAGGCCTTGGAACGAGCACCGACCCAGATCCCTATACATCAAGCCAGGCTGGCCTGGCACATAAATAGACGGTCCGCACTGCAGCACCTTGCCATCTAATGCCCTCAGCCCCATCAATGTCTACGGTGCGGAGATAGCTTCAACGTGGCGTCAAAGCCCAAATTACTATCAGCCTGAAGGGGTAACTAGGTCCGGTTCGATTCCCGACGTAAATTCTGAATCAACCGTAATATGTGTAAATCACACGGGCTGCGGACAGCGGTACGCTGGATTATTACCATCTTAAGCCTGCCAAGCGATCTAAGTAAACTTCAGATGTTATACACCCGCTATCCAGGCGAAGACGCTGTTGGGCTACCAATTGTGAGAGAACTGCAGCTGAGCCGGGTGAATCTGTGTATGAGTTAGGTCGGGGCCGCTCTTCAATGCTTGACGATCCCACGTAGTGCGATCAACCACCCGCAAATGTGACAGTTTACTCGGAGTTATCTACGCCGGATACATGACGAGCTGACCCTGGACGCTTACTGTACCTGCTTGCATTATGAGAGGACCTTTAATTGATTAGATTACACAGTAAAGGCGTCAGTGGTCTGATGCAGCTCACATCTCAAAACGCTCGAAGGACAAGACACGACATGTAACGCACCTTTTTCTATAGCCGTCAAAGTTCAATCACAGTTCCTACTTCCGCAAGTTTGTTGAAGTTCCATCGTAAAGTCCCCCTATGGTACGCAGCTGTCTCGACACGATTCCTCAAGAGTACACCAAATAGAGTTTAGTCTCAGCAGCGGTCGGTGGTTTTAAACCTATACGCGACACCCAGAGAGCAATATATTAATTCTTCCCGCTGGGGCAGCATTCCGGTCCCATTACTCTCCAAGAATAGCGCACATCTGCCACTCCACAACACTCTCGAAAGGCCTTTTCCAATGTCCATCGGAAATGGGGAGCACTCACGAGATTCTAGCGTTGAAGGCTAGTCGCCTTGGGTCGCCACCCTGTTCGGGTTACGAGTCTTATCAAGCCTCCACGGCGCAGATTGTTTGCGTGCTTTGACGATAAGCATAGCGCGTCGATACAGCTGGAGCCAATCGCGTAACCTCGTCTTAGACTATTGTGAAGTCGTTTGGTAATTGTGAGATTCTGTCAGGATATGACCGCCTTCGGCACCGCCGCCAATCAATTACCAAATCAACGTCTCCAGGAGTGACAGGA"
x={"TGA" : "*", "TAA" : "*", "TAG" : "*", "TTT" : "F", "TTC" : "F", "TTA" : "L", "TTG" : "L", "CTT" : "L", "CTC" : "L", "CTA" : "L", "CTG" : "L", "ATT" : "I", "ATC" : "I", "ATA" : "I", "ATG" : "M", "GTT" : "V", "GTC" : "V", "GTA" : "V", "GTG" : "V", "TCT" : "S", "TCC" : "S", "TCA": "S", "TCG" : "S", "CCT" : "P", "CCC" :  "P", "CCA" : "P", "CCG" : "P", "ACT" : "T", "ACC" : "T", "ACA" : "T", "ACG" : "T", "GCT" : "A", "GCC" : "A", "GCA" : "A", "GCG" : "A", "TAT" : "Y", "TAC" : "Y", "CAT" : "H", "CAC" : "H", "CAA" : "Q", "CAG" : "Q", "AAT" : "N", "AAC" : "N", "AAA" : "K", "AAG" : "K", "GAT" : "D", "GAC" : "D", "GAA" : "E", "GAG" : "E", "TGT" : "C", "TGC" : "C", "TGG" : "W", "CGT" : "R", "CGC" : "R", "CGA" : "R", "CGG" : "R", "AGT" : "S", "AGC" : "S", "AGA" : "R", "AGG" : "R", "GGT" : "G", "GGC" : "G", "GGA" : "G", "GGG" : "G"} 


#have to start with AUG, and stop at UAA and UAG and UGA
#UUU=("F")
#UUC=("F")
#UUA=("L")

#print x["UUU"]
new = ""
for i in range(0, len(s)-2, 3):
    new= new +  x[s[i:i+3]] 
    
L=new.split('*')

print L

longest= len(L[0])

sequence= L[0]

for u in L:
   if (len(u)>longest):
     longest=len(u)
     sequence= u

print longest, sequence
#x={"UUU" : "F", "UUC" : "F"} 

#UUU=("F")
#UUC=("F")
#UUA=("L")

#print x["UUU"]


